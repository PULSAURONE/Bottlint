# START OF FILE status_service.py #

import logging
import os
from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardButton, \
    InlineKeyboardMarkup  # –î–æ–±–∞–≤–ª–µ–Ω—ã InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from config import (
    TEXT_AI_PROVIDER,
    VOICE_AI_PROVIDER,  # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç VOICE_AI_PROVIDER
    GOOGLE_DRIVE_CREDENTIALS_PATH,
    ALLOWED_TELEGRAM_IDS,
    MAIN_KEYBOARD_MARKUP
)

logger = logging.getLogger(__name__)


class StatusService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞."""

    def __init__(self, drive_service, ai_service, stt_service, ext_knowledge_service, kb_service):
        self.drive_service = drive_service
        self.ai_service = ai_service
        self.stt_service = stt_service
        self.ext_knowledge_service = ext_knowledge_service
        self.kb_service = kb_service

    async def get_status(self, update: Update, context: CallbackContext) -> None:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π."""
        user = update.effective_user
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} (ID: {user.id}) –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞.")

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        ai_status_icon = "‚úÖ" if self.ai_service else "‚ùå"
        voice_status_icon = "‚úÖ" if self.stt_service else "‚ùå"
        web_search_status_icon = "‚úÖ" if self.ext_knowledge_service and (
                (hasattr(self.ext_knowledge_service, 'google_search') and self.ext_knowledge_service.google_search) or \
                (hasattr(self.ext_knowledge_service, 'wikipedia') and self.ext_knowledge_service.wikipedia)
        ) else "‚ùå"
        drive_status_icon = "‚úÖ" if self.drive_service and self.drive_service.is_authenticated else "‚ùå"

        # –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ë–∞–∑—ã –ó–Ω–∞–Ω–∏–π
        kb_docs_count = 0
        if self.kb_service and self.kb_service.source_id_to_faiss_ids_map:
            kb_docs_count = len(self.kb_service.source_id_to_faiss_ids_map)

        kb_status_text = "–ü—É—Å—Ç–∞"
        if kb_docs_count > 0:
            kb_status_text = f"{kb_docs_count} –¥–æ–∫—É–º–µ–Ω—Ç{'–æ–≤' if kb_docs_count != 1 else ''} (–µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ)"
            kb_status_icon = "‚úÖ"
        else:
            kb_status_icon = "‚ùå"

        # –§–æ—Ä–º–∏—Ä—É–µ–º –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
        status_text = (
            "<b>üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:</b>\n\n"
            f"üë§ <b>–î–æ—Å—Ç—É–ø:</b> {'–û–≥—Ä–∞–Ω–∏—á–µ–Ω' if ALLOWED_TELEGRAM_IDS else '–û—Ç–∫—Ä—ã—Ç –¥–ª—è –≤—Å–µ—Ö'}\n"
            f"ü§ñ <b>AI-—Ç–µ–∫—Å—Ç:</b> {TEXT_AI_PROVIDER or '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'} {ai_status_icon}\n"
            f"üé§ <b>AI-–≥–æ–ª–æ—Å:</b> {VOICE_AI_PROVIDER or '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'} {voice_status_icon}\n"
            f"üåê <b>–ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ:</b> {'–í–∫–ª—é—á–µ–Ω' if web_search_status_icon == '‚úÖ' else '–í—ã–∫–ª—é—á–µ–Ω'} {web_search_status_icon}\n"
            f"üìÇ <b>Google Drive:</b> {'–ü–æ–¥–∫–ª—é—á–µ–Ω' if drive_status_icon == '‚úÖ' else '–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω'} {drive_status_icon}\n"
            f"üß† <b>–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π:</b> {kb_status_text} {kb_status_icon}\n\n"
            f"üíæ <b>–§–∞–π–ª client_secret.json:</b> {'–ù–∞–π–¥–µ–Ω' if os.path.exists(GOOGLE_DRIVE_CREDENTIALS_PATH) else '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}\n\n"
            "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–ª–∏ <b>'‚öôÔ∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º'</b> –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –∏ –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        keyboard = [[InlineKeyboardButton("‚öôÔ∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="settings_start_from_status")]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        await update.message.reply_text(status_text, parse_mode='HTML', reply_markup=reply_markup)
        # –û—Ç–¥–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, —á—Ç–æ–±—ã –æ–Ω–æ –≤—Å–µ–≥–¥–∞ –±—ã–ª–æ –≤–Ω–∏–∑—É
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=MAIN_KEYBOARD_MARKUP)

# END OF FILE status_service.py #